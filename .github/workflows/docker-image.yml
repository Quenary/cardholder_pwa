name: Build and Push Docker Image on Version Tag

on:
  # push:
  #   tags:
  #     - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version to build (e.g. v1.2.3), this will be the docker-image tag"
        required: true
  # workflow_run:
  #   workflows: ["Semantic Release"]
  #   types:
  #     - completed

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      exists: ${{ steps.check_tag.outputs.exists }}
    env:
      IMAGE_NAME: quenary/cardholder_pwa

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: version
        run: |
          VERSION="${{ github.event.inputs.version }}"

          if [ -z "$VERSION" ]; then
            echo "❌ ERROR: No version tag found. Aborting."
            exit 1
          fi

          echo "✅ Using VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if Docker tag already exists
        id: check_tag
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags/${{ steps.version.outputs.version }}/)
          echo "Status: $STATUS"
          if [ "$STATUS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-tag
    if: needs.check-tag.outputs.version != '' && needs.check-tag.outputs.exists == 'false'
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: quenary/cardholder_pwa
      VERSION: ${{ needs.check-tag.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build \
            --build-arg VERSION=${{ env.VERSION }} \
            -t $IMAGE_NAME:${{ env.VERSION }} \
            -t $IMAGE_NAME:latest .

      - name: Push Docker image (${{ env.VERSION }})
        run: docker push $IMAGE_NAME:${{ env.VERSION }}

      - name: Push Docker image (latest)
        run: docker push $IMAGE_NAME:latest
